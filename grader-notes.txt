cd c:\projz\CG_Grader\cggrader && npm run start



// module 1

Hello,

Congratulations on a good homework assignment! You were able to demonstrate your ability to refactor a web app with HTML and CSS. Good job deploying your application, you were able to correctly deploy to a live URL. Your application loads with minimal errors upon page load. You were able to submit your GitHub URL and your repo contains working organized code. You are using semantic html tags, there are alt tags in your images in the index.html file and the links are working. Also the css file is consolidated. The readme has a project description, screenshot, and deployment link.

Good job.

-Respectfully, Central Grader YaeliB



// module 2

Hello, 

Good job with the project. You were able to demonstrate your ability to create a professional profile. You are able to get the application deployed to Github pages and it loads with minimal errors. The application resembles the mock up functionality. You are following best practices for the file structure of the repo and naming conventions. Along with the best practices for class/id naming conventions, indentation. The readme has a project description, screenshot, and deployment link. Overall, good job with the project. 

-Respectfully, Central Grader YaeliB



// module 2: only repo name

Hello, 

Good job with the project. You were able to demonstrate your ability to create a professional profile. You are able to get the application deployed to Github pages and it loads with minimal errors. The application resembles the mock up functionality. You are following best practices for the file structure of the repo and naming conventions. Along with the best practices for class/id naming conventions, indentation. The readme has a project description, screenshot, and deployment link. Overall, good job with the project. The only thing points were taken off for was for the repo name. You need to have an unique repo name. 

-Respectfully, Central Grader YaeliB



// module 2: no assets folder

Hello, 

Good job with the project. You were able to demonstrate your ability to create a professional profile. You are able to get the application deployed to Github pages and it loads with minimal errors. The application resembles the mock up functionality. In your repo you have your assets in the root of the repo. You need to have them in an assets folder and also within their correct subfolders in the assets folder.  Along with the best practices for class/id naming conventions, indentation. The readme has a project description, screenshot, and deployment link. Overall, good job with the project. The only thing points were taken off for is the folder structure. You need to have an assets folder within the repo. 

-Respectfully, Central Grader YaeliB



// module 2: no assets folder and no unique repo name

Hello, 

Good job with the project. You were able to demonstrate your ability to create a professional profile. You are able to get the application deployed to Github pages and it loads with minimal errors. The application resembles the mock up functionality. In your repo you have your assets in the root of the repo. You need to have them in an assets folder and also within their correct subfolders in the assets folder.  Along with the best practices for class/id naming conventions, indentation. The readme has a project description, screenshot, and deployment link. Overall, good job with the project. The only things points were taken off for is the folder structure. You need to have an assets folder within the repo. Also the repo name, you need to have an unique repo name. 

-Respectfully, Central Grader YaeliB



// module 3

Hello, 

Good job with the project. You were able to demonstrate your ability to create a password generator application. You were also able to get the application deployed on Github pages. I am able to generate a password with the application and it prints the password onto the screen. You are following best practices for the file structure of the repo and naming conventions. Along with the best practices for class/id naming conventions, indentation. The readme has a project description, screenshot, and deployment link. Overall, good job with the project. 

-Respectfully, Central Grader YaeliB


// module 4

Hello, 

Good job with the project. I am able to take the quiz and it saves my score. 

-Respectfully, Central Grader YaeliB




// module 5

Hello,

Good job with the project. You were able to demonstrate your ability to create a work day scheduler. You are able to get the application deployed to github pages and it loads with minimal errors. I can add entries into the scheduler and it saves them into localstorage. You are following best practices for the file structure of the repo and naming conventions. Along with the best practices for class/id naming conventions, indentation. The readme has a project description, screenshot, and deployment link. Overall, good job with the project. 

-Respectfully, Central Grader YaeliB


// module 5: only repo name

Hello,

Good job with the project. You were able to demonstrate your ability to create a work day scheduler. You are able to get the application deployed to github pages and it loads with minimal errors. I can add entries into the scheduler and it saves them into localstorage. You are following best practices for the file structure of the repo and naming conventions. Along with the best practices for class/id naming conventions, indentation. The readme has a project description, screenshot, and deployment link. Overall, good job with the project. The only thing points were taken off for is the repo name. You need to have an unique repo name. 

-Respectfully, Central Grader YaeliB


// module 5: missing assets folder

Hello,

Good job with the project. You were able to demonstrate your ability to create a work day scheduler. You are able to get the application deployed to github pages and it loads with minimal errors. I can add entries into the scheduler and it saves them into localstorage. In your repo you have your assets in the root of the repo. You need to have them in an assets folder and also within their correct subfolders in the assets folder. The readme has a project description, screenshot, and deployment link. Overall, good job with the project. The only thing points were taken off for is the folder structure. You need to have an assets folder within the repo. 

-Respectfully, Central Grader YaeliB




Look into refactoring the script file to use a loop on lines L57-L73. That will reduce the amount of repeated code since only the number in the strings change.




// module 10 Team Profile Generator

Hello, 

Good job with the project. You video demonstrated functionality. I can create a html page with the team members on it. I can also run the tests and they all pass. 

Good job.

-Respectfully, Central Grader YaeliB



// module 19

Hello,

Congratulations on a good homework assignment! You were able to demonstrate your ability to create a progressive web application. Good job deploying your application, you were able to correctly deploy to a live URL. Your application loads with minimal errors upon page load. I can install the application and run it locally. I can write in the text editor and it saves the content that I write. When I refresh the page it displays the contents that I wrote from local storage. You were able to submit your GitHub URL and your repo contains working organized code. The readme has a project description, screenshot, and deployment link. Overall, good job with the project. 

Good job. 

-Respectfully, Central Grader YaeliB



Hello,

Good job with the project. I can install the application locally and run it as a progressive web application. I can write in the text editor and it saves the content that I write. When I refresh the page it displays the contents that I wrote from local storage. The readme has a project description, screenshot, and deployment link. Good job with your project. The only thing points were taken off for is the repo name. You need to have an unique repo name. 

Good job. 

-Respectfully, Central Grader YaeliB













Hello,

Good job with the project.

-Respectfully, Central Grader YaeliB







Hello,

Good job with the project. In your submission you only need to submit the heroku page link and and the github repo. The gh page I found here: https://github.com/CindzaJ/WK19-Homework/. I am able to type in the editor and it saves my text and then displays it when I refresh the page. I am not able to install the application locally on my machine. I don't have the button in my browser nor does the install button work on the application. All the content in your MK 19/ directory that should be in the root of your repo. You have the project requirements and screenshots in the M19 HMK directory. That should be in the root of the repo. Good job with the project. Points were taken off for the application not being able to be installed locally, and the repo name. You need to have an unique repo name. 

-Respectfully, Central Grader YaeliB


Hello,

Good job with the project. I am not able to see the application on heroku. When I goto the link it shows an heroku error page. Your readme has a project description but you are missing a screenshot and deployment link. In the repo you need to have an professional readme. The professional readme needs to have a description, screenshot and deployment link. You can find more information on the professional readme here: https://coding-boot-camp.github.io/full-stack/github/professional-readme-guide. Overall, good job on your project. Points were taken off because the deployment is not working, missing items in professional readme, and the repo name. You need to have a professionl readme. 

-Respectfully, Central Grader YaeliB


Hello,

Good job with the project. I can type into the editor and refresh the page and it saves my text. I am not able to install the project locally on my machine through the browser or with the install button. In the repo you have the deployment link, but you are missing the screenshot and a project description. The professional readme needs to have a description, screenshot and deployment link. You can find more information on the professional readme here: https://coding-boot-camp.github.io/full-stack/github/professional-readme-guide. Overall, good job on your project. Points were taken off for the missing screenshot, missing install functionality, and the repo name. You need to have an unique repo name. 

-Respectfully, Central Grader YaeliB



Good job with the project. You were able to demostrate your ability to create a budget application. You are able to get the application deployed to github pages and it loads with minimal errors. I can add entries into the scheduler and it saves them into localstorage. Looking at the repo, it does appear you still have your develop folder. You don't need that folder anymore now that you are turning in your project. Inside of the develop folder I do see thats where you have your assets. Maybe in this case you forgot to rename that folder to Assets/ because it is required that you have an assets folder and then css/ and js/ subfolders within that folder. In the root of the repo you have a readme, but its not displaying. Its because the readme is in all uppercase. You have to rename the readme and also it is empty. In the repo you need to have an professional readme. The professional readme needs to have a description, screenshot and deployment link. You can find more information on the professional readme here: https://coding-boot-camp.github.io/full-stack/github/professional-readme-guide. Overall, good job with your project. Points were taken off for the directory structure and the missing items in your readme.








// mod 5 modified

Hello,

Good job with the project. You were able to demostrate your ability to create a budget application. You are able to get the application deployed to github pages and it loads with minimal errors. I can add entries into the scheduler and it saves them into localstorage. You are following best practices for class/id naming conventions, indentation. In the repo you have the script and css files in the root of the repo. Those files need to be in an assets folder within the root. Then the script files needs to be in js/ folder and the css needs to be in an css/ in order to have proper folder structure for the repo. The readme has a project description, screenshot, and deployment link. Overall, good job with the project. The only things points were taken off for is the repo structure. You need to have your assets in an assets folder  

-Respectfully, Central Grader YaeliB



Hello,

Good job with the project. You were able to demostrate your ability to create a budget application. You are able to get the application deployed to github pages and it loads with minimal errors. However, I am not able to save my score into localstorage. Upon cloning and troubleshooting the application, its because in the script file you are targeting ".saveButton" and throughout your index.html your save button class is ".saveBtn". So when I pressed the save button it didn't do anything. I updated the javascript to target the correct class and it saves my items into localstorage. When the page loads, its not retrieving the items in localstorage and updating the page. One thing I would suggest, when you are saving into localstorage to have it save into one key. Then use a object that has a key of an array. That way you are only going to the localstorage for one item. Right now, depending on what hour I save it creates multiple items in my localstorage. Since I do a lot projects on the side I have around 40 items in my localstorage from other projects. Also, there might another application that could use the same key name as what you are using here. So if there is another application that updates "10AM" key, when I come back to this webpage that data would show up (if the localstorage retrieve was functioning). So many the Key can be "WorkDayScheduler" then have an JSON parsed Object with the keys "{ "8AM": "", "9AM": "", ...etc "}". Other than that, you do have an assets folder in the repo but the assets are not seperated by type in their own respective folders. You also need to have css/ images/ and js/ folders within the assets folder. You have a project descriptions, link and video in your readme. Overall good job with your project. Only things points were taken off for is missing functionality with localstorage. 

-Respectfully, Central Grader YaeliB




Hello,

Good job with the project. You were able to demostrate your ability to create a budget application. You are able to get the application deployed to github pages and it loads with minimal errors. I can add entries into the scheduler and it does not saves them into localstorage. It does not display the items when the page refreshes. You are following the best practices for class/id naming conventions, indentation. In your repo you have your assets in the root of the repo. You need to have them in an assets folder and also within their correct subfolders in the assets folder. In the repo you need to have an professional readme. The readme is of the project requirements. You need to have a professional readme for the project. The professional readme needs to have a description, screenshot and deployment link. You can find more information on the professional readme here: https://coding-boot-camp.github.io/full-stack/github/professional-readme-guide. Overall, good job with the project. The only things points were taken off for are the repo name, you need to have an unique repo name, and the missing items in the readme. 

-Respectfully, Central Grader YaeliB



Hello,

Good job with the project. You were able to demostrate your ability to create a budget application. You are able to get the application deployed to github pages and it loads with minimal errors. I can add entries into the scheduler and it saves them into localstorage. You do have an assets/ folder but the assets need their own subfolders within the assets/ folder. The CSS needs a css/ folder and the js needs a js/ folder. The readme has a project description, screenshot, and deployment link. Overall, good job with the project. The only thing points were taken off for is folder structure in the assets folder. 

-Respectfully, Central Grader YaeliB



Hello,

Good job with the project. You were able to demostrate your ability to create a budget application. You are able to get the application deployed to github pages and it loads with minimal errors. I am however not able to save my entries into the editor. That's because of the class you are targeting for your event listener is for .save-btn but in your index.html you have .saveBtn as your class on your buttons. However, I do like that you implemented a clear all button. That is different and not many people implemented or tried to implement that. I can't verify its functionality because the save button is not working. In your repo you have your assets in the root of the repo. You need to have them in an assets folder and also within their correct subfolders in the assets folder. The readme has a project description, screenshot, and deployment link. Overall, good job with the project. The only things points were taken off for is the missing save functionality on the frontend and the folder structure. You need to have an assets folder within the repo.  

-Respectfully, Central Grader YaeliB




In your repo you have your assets in the root of the repo. You need to have them in an assets folder and also within their correct subfolders in the assets folder.



Hello,

Good job with the project. You did get github pages to work but right now its not displaying your project. That's because the directory structure is not correct in your repo. Right now its displaying the readme.md file. It needs to display the index.html file thats in your Develop/ folder. If I add the Develop/ path to the url it displays the project. That is not correct. However in the project, I am able to write into the editor but it does not save my content that I write. In your script.js file you don't have the code for saving into localstorage. In the repo, you are also missing a professional readme. In the repo you need to have an professional readme. The professional readme needs to have a description, screenshot and deployment link. You can find more information on the professional readme here: https://coding-boot-camp.github.io/full-stack/github/professional-readme-guide. Overall, this is a decent start to your project. It does not seem like it is complete. If you were having trouble with it, you can reach out to the TA's or Tutors for assistance. Points were taken off for the deployment not displaying the project correctly, missing functionality on the index.html file, directory structure is not correct, and missing professional readme. 

-Respectfully, Central Grader YaeliB



Hello,

Good job with the project. I see your message in the readme. I also that you were able to get the application deployed. Because the application directory structure is not correct, (you need the content of the Develop folder in the root), I can hotlink to the project. It does not provide required functionality. In the script file, it looks like you have the logic to display the colors for the scheduler, but its not being called. Overall, this is a good start. I think you just needed more time to finish it. Points were taken off for the missing functionality in the application, directory structure, and missing professional readme with project description, screenshot, and deployment link. 

-Respectfully, Central Grader YaeliB



Hello,

Good job with the project. You were able to demostrate your ability to create a budget application. You are able to get the application deployed to github pages and it loads with minimal errors. However, I am not able save the content into localstorage. Looking at the code and reading the console its not saving the content because the setItem() method in the localStorage class uses 2 parameters. On L14 you are only passing one, which is the key value, "textArea". You also have to pass the text content as the second parameter. Also in your for loop on L39 you are assigning a value when you wanted to compare two values. You have a single =. You need to have at least == or preferably (when you start working with linting and react) need to use ===. In your repo you have your assets in the root of the repo. You need to have them in an assets folder and also within their correct subfolders in the assets folder. The readme has a project description, screenshot, and deployment link. Overall, good job with the project. Points were taken off because of the missing functioning save functionality on the front end, and missing assets folder.

-Respectfully, Central Grader YaeliB



// asdfasdf


Hello,

Good job with the project. You were able to demostrate your ability to create a budget application. You are able to get the application deployed to github pages. I am not able to save the items I write in the scheduler. Looking at the code, it looks like the script file was not completely implemented. That would reflect the console.error message I got when trying to save. You also do not have the readme filled out. In the repo you need to have an professional readme. The professional readme needs to have a description, screenshot and deployment link. You can find more information on the professional readme here: https://coding-boot-camp.github.io/full-stack/github/professional-readme-guide. Overall, good start to your project. You were able to get it deployed and the directory structure is setup. Points were taken off for the missing save functionality and the readme missing items. 

-Respectfully, Central Grader YaeliB



Hello,

Good job with the project. It seems the you were able to fix the output because I can see the scheduler at the time of grading (or it fixed itself). You were able to demostrate your ability to create a budget application. You are able to get the application deployed to github pages and it loads with minimal errors. I can add entries into the scheduler and it saves them into localstorage. In your repo you have your assets in the root of the repo. You need to have them in an assets folder and also within their correct subfolders in the assets folder. You do have an assets folder but it only has an image file. The readme has a project description, and deployment link. The screenshots are not showing up because they are referencing image files that are not in the assets folder. You have to upload those images into the assets/images/ folder and update the references in the readme to get them to work again. Overall, good job with the project. The only thing points were taken off for missing screenshots in the readme and the directory structure. You have your assets in the root of the repo and they need to be in their own folders within the assets folder. 

-Respectfully, Central Grader YaeliB



Hello,

Good job with the project. You were able to demostrate your ability to create a budget application. You are able to get the application deployed to github pages. I am not able to save the items I write in the scheduler. When I look at the console, there is an error on page load. That prevents the reset of the script from running. Looking at the code, it is because you are using a variable you have not defined yet 'saveText'. Also, looking at the readme, you have a project description and deployment link but you are missing a screenshot. In the repo you need to have an professional readme. The professional readme needs to have a description, screenshot and deployment link. You can find more information on the professional readme here: https://coding-boot-camp.github.io/full-stack/github/professional-readme-guide. Another thing about your readme, try to write everything with a neutral tone. Your header 'How to inneficiently solve a problem' seems sarcastic and as if you were making a joke to your self. This is a project that you are learning how to solve a problem with code. So it is okay that its inefficient because you are learning. When you finish the program and look at this code again you will see there is room to refactor because you would have learned new and more efficient ways of solving problems/coding. With the code snippit and what you have in your script file, you can refactor that to be a method and call the method for each hour you are trying to present. You can use conditional logic, switch statement to more efficiently do the same thing. Right now you are doing more expensive operations. Look at youtube videos about the DRY principal. Also, DRY refactoring. Look at the video by Mr. Robot, its in vanilla js. Overall, good job to your project. You were able to get it deployed and the directory structure is setup. Points were taken off for the missing save functionality and the readme missing items. 

-Respectfully, Central Grader YaeliB



Hello,

Good job with the project. You were able to demostrate your ability to create a budget application. You are able to get the application deployed to github pages. I am not able to save the items I write in the scheduler. When I press the save button it displays a few things in the console. Looking at the script file you were doing a good job at capturing the information its just that the method to save everything is commented out. You are capturing the information and the next step would be to save it. Then the final step would be when the page loads it pulls the information. Your script file looks like you were on track but its just not finished. In your repo you have a description, but you are missing the screenshot and deployment link. Your screenshot is on the readme but the reference is not correct. You are referring DemoGif in the root of the repo. The file is not in the repo. So I don't know if you may have accidentally deleted it. Overall, good start with the project, you were able to get it deployed but it does not seems complete. Points were taken off for the missing save functionality, missing items in the readme, and missing subfolders in the assets folder. You also need a css/ folder for your css and js/ folder for your javascript files. 

-Respectfully, Central Grader YaeliB



Hello,

Good job with the project. You were able to demostrate your ability to create a budget application. You are able to get the application deployed to github pages. I am not able to save the items I write in the scheduler. Looking at the code, it looks you started the helper methods but everything is not connected yet. You have a method that has a loop to set the class to determine what hour it is, and also you have a add event listener but its not getting the text content correctly. Also, within the script file, pay attention to the indentation level of your code blocks. Most of the page is indented implying its within another code block but its on the global level. You also do not have the readme filled out. In the repo you need to have an professional readme. The professional readme needs to have a description, screenshot and deployment link. You can find more information on the professional readme here: https://coding-boot-camp.github.io/full-stack/github/professional-readme-guide. Overall, good start to your project. You were able to get it deployed and the directory structure is setup. Points were taken off for the missing readme, and missing save functionality. 

-Respectfully, Central Grader YaeliB



Hello,

Good job with the project. You were able to demostrate your ability to create a budget application. You are able to get the application deployed to github pages and it loads with minimal errors. I can add entries into the scheduler and it saves them into localstorage. You are following best practices for the file structure of the repo and naming conventions. Along with the best practices for class/id naming conventions, indentation. The readme has a project description, screenshot, and deployment link. Overall, good job with the project. 

-Respectfully, Central Grader YaeliB



Hello,

Good job with the project. You were able to demostrate your ability to create a budget application. You are able to get the application deployed to github pages and it loads with minimal errors. I can add entries into the scheduler and it saves them into localstorage. You are following best practices for the file structure of the repo and naming conventions. Along with the best practices for class/id naming conventions. The indentation in your script file is not consistent. The script file works but the console.logs within the updateProjectBlocks() code block are not indented to match the rest of the code or not even indented at all. It's important to be consistent with the amount and correct heirarchy of indentation. That allows your code to be easier to read, especially if it gets larger. The readme has a project description, screenshot, and deployment link. Overall, good job with the project. The only thing points were taken off for is for the indentation in the script file. 

-Respectfully, Central Grader YaeliB









































































